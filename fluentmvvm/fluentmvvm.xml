<?xml version="1.0"?>
<doc>
    <assembly>
        <name>fluentmvvm</name>
    </assembly>
    <members>
        <member name="M:FluentMvvm.Debug.Assert(System.Boolean)">
            <summary>Checks for a condition; if the condition is <c>false</c>, displays a message box that shows the call stack.</summary>
            <param name="condition">
                The conditional expression to evaluate. If the condition is <c>true</c>, a failure message is
                not sent and the message box is not displayed.
            </param>
        </member>
        <member name="M:FluentMvvm.Debug.Assert(System.Boolean,System.String)">
            <summary>
                Checks for a condition; if the condition is <c>false</c>, outputs a specified message and displays a message
                box that shows the call stack.
            </summary>
            <param name="condition">
                The conditional expression to evaluate. If the condition is <c>true</c>, the specified message
                is not sent and the message box is not displayed.
            </param>
            <param name="message">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners"></see> collection.</param>
        </member>
        <member name="T:FluentMvvm.EmptyFluentAction">
            <summary>
                An object implementing all fluent methods as methods doing nothing.
            </summary>
            <seealso cref="T:FluentMvvm.IPropertySetExpression" />
            <seealso cref="T:FluentMvvm.IDependencyExpression" />
            <seealso cref="T:FluentMvvm.IPropertySetExpression" />
            <seealso cref="T:FluentMvvm.IDependencyExpression" />
        </member>
        <member name="P:FluentMvvm.EmptyFluentAction.Default">
            <summary>
                Gets a singleton <see cref="T:FluentMvvm.EmptyFluentAction" />.
            </summary>
            <value>
                A singleton instance of an <see cref="T:FluentMvvm.EmptyFluentAction" />.
            </value>
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Affects(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Affects(System.Windows.Input.ICommand)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Affects(FluentMvvm.IWpfCommand)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.WasUpdated">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Boolean,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Byte,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.SByte,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Char,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Decimal,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Double,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Single,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Int16,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.UInt16,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.UInt32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.Int64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.UInt64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.DateTime,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.EmptyFluentAction.Set``1(``0,``0@,System.String)">
            <inheritdoc />
        </member>
        <member name="T:FluentMvvm.FluentViewModelBase">
            <summary>
                A base class for view models implementing <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> and providing a fluent API for
                property setters.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMvvm.FluentViewModelBase"/> class.
            </summary>
            <param name="createBackingFields">Must be set to <c>true</c> in order to use the <c>Get</c> and <c>Set</c> methods.</param>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.AfterSet``1(``0,System.String)">
            <summary>
            This method allows for code to execute after a property value that was different from the old value was set.
            </summary>
            <remarks>This method will only be executed if the new property value was different from the old value.</remarks>
            <param name="value">The new value of the property.</param>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Get``1(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <typeparamref name="T" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetBoolean(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Boolean" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetByte(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Byte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetSByte(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.SByte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetChar(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Char" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetDecimal(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Decimal" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetDouble(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Double" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetSingle(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Single" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetInt16(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetUInt16(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetInt32(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetUInt32(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetInt64(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetUInt64(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetDateTime(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.DateTime" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.GetString(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.String" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set``1(``0,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <typeparamref name="T" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Boolean,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Boolean" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Byte,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Byte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.SByte,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.SByte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Char,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Char" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Decimal,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Decimal" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Double,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Double" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Single,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Single" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Int16,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.UInt16,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Int32,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.UInt32,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.Int64,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.UInt64,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.DateTime,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.DateTime" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set(System.String,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.String" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.Set``1(``0,``0@,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="oldValue">A reference to the old value of the property. This can be a field.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.When(System.Boolean)">
            <summary>
                If <paramref name="condition" /> is <c>false</c>, no following
                <c>Set</c>, <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.String)" /> or
                <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.Windows.Input.ICommand)" /> will be executed.
            </summary>
            <param name="condition">only if set to <c>true</c> will the following fluent calls be executed.</param>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.When(System.Func{System.Boolean})">
            <summary>
                If <paramref name="condition" /> evaluates to <c>false</c>, no following
                <c>Set</c>, <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.String)" /> or
                <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.Windows.Input.ICommand)" /> will be executed.
            </summary>
            <param name="condition">only if evaluates to <c>true</c> will the following fluent calls be executed.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="condition" /> is <c>null</c>.</exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.FluentMvvm#IDependencyExpression#Affects(System.String)">
            <summary>
                Raises a <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event for the property
                <paramref name="propertyName" /> if the new property value was different from the old value.
            </summary>
            <param name="propertyName">The name of the property that changes when this property changes.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="propertyName" /> is null, empty or consists only of white-space
                characters.
            </exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.FluentMvvm#IDependencyExpression#Affects(System.Windows.Input.ICommand)">
            <summary>
                Raises a <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event for the <see cref="T:System.Windows.Input.ICommand" /> if the new property
                value was different from the old value.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
            <exception cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
                <paramref name="command" /> does not provide a public, parameter-less
                <c>RaiseCanExecuteChanged</c> method.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="command" /> is <c>null</c>.</exception>
            <remarks>
                For this method to work correctly, <paramref name="command" /> must provide a
                <c>public void RaiseCanExecuteChanged()</c> method.
            </remarks>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.FluentMvvm#IDependencyExpression#Affects(FluentMvvm.IWpfCommand)">
            <summary>
                Raises a <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event for the <see cref="T:FluentMvvm.IWpfCommand" /> if the new property
                value was different from the old value.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="command" /> is <c>null</c>.</exception>
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.FluentMvvm#IDependencyExpression#WasUpdated">
            <summary>
                Returns a value indicating whether the new property value was different from the old value.
            </summary>
            <returns>
                <c>true</c> if the new property value was different from the old value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="E:FluentMvvm.FluentViewModelBase.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:FluentMvvm.FluentViewModelBase.RaisePropertyChanged(System.String)">
            <summary>
                Notifies listeners that the property <paramref name="propertyName" /> has changed.
            </summary>
            <param name="propertyName">
                The name of the property that has changed. You should not provide the name yourself and rely
                on the compiler inserting the name automatically for you.
            </param>
        </member>
        <member name="T:FluentMvvm.IConditionalExpression">
            <summary>
                Provides methods that determine whether or not the following fluent calls should execute.
            </summary>
        </member>
        <member name="M:FluentMvvm.IConditionalExpression.When(System.Boolean)">
            <summary>
                If <paramref name="condition" /> is <c>false</c>, no following
                <c>Set</c>, <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.String)" /> or
                <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.Windows.Input.ICommand)" /> will be executed.
            </summary>
            <param name="condition">only if set to <c>true</c> will the following fluent calls be executed.</param>
        </member>
        <member name="M:FluentMvvm.IConditionalExpression.When(System.Func{System.Boolean})">
            <summary>
                If <paramref name="condition" /> evaluates to <c>false</c>, no following
                <c>Set</c>, <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.String)" /> or
                <see cref="M:FluentMvvm.IDependencyExpression.Affects(System.Windows.Input.ICommand)" /> will be executed.
            </summary>
            <param name="condition">only if evaluates to <c>true</c> will the following fluent calls be executed.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="condition" /> is <c>null</c>.</exception>
        </member>
        <member name="T:FluentMvvm.IDependencyExpression">
            <summary>
                Provides method to express dependencies between properties or between a property and a command.
            </summary>
        </member>
        <member name="M:FluentMvvm.IDependencyExpression.Affects(System.String)">
            <summary>
                Raises a <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event for the property
                <paramref name="propertyName" /> if the new property value was different from the old value.
            </summary>
            <param name="propertyName">The name of the property that changes when this property changes.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="propertyName" /> is null, empty or consists only of white-space
                characters.
            </exception>
        </member>
        <member name="M:FluentMvvm.IDependencyExpression.Affects(System.Windows.Input.ICommand)">
            <summary>
                Raises a <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event for the <see cref="T:System.Windows.Input.ICommand" /> if the new property
                value was different from the old value.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
            <exception cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
                <paramref name="command" /> does not provide a public, parameter-less
                <c>RaiseCanExecuteChanged</c> method.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="command" /> is <c>null</c>.</exception>
            <remarks>
                For this method to work correctly, <paramref name="command" /> must provide a
                <c>public void RaiseCanExecuteChanged()</c> method.
            </remarks>
        </member>
        <member name="M:FluentMvvm.IDependencyExpression.Affects(FluentMvvm.IWpfCommand)">
            <summary>
                Raises a <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event for the <see cref="T:FluentMvvm.IWpfCommand" /> if the new property
                value was different from the old value.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="command" /> is <c>null</c>.</exception>
        </member>
        <member name="M:FluentMvvm.IDependencyExpression.WasUpdated">
            <summary>
                Returns a value indicating whether the new property value was different from the old value.
            </summary>
            <returns>
                <c>true</c> if the new property value was different from the old value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FluentMvvm.Internals.FixedSizeDictionary`1">
            <summary>
                Provides a fixed-size read-only dictionary.
            </summary>
            <remarks>No values can be added or removed after creation, but the values itself are mutable.</remarks>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="F:FluentMvvm.Internals.FixedSizeDictionary`1.Count">
            <summary>
                Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:FluentMvvm.Internals.FixedSizeDictionary`1" /> class.
            </summary>
            <param name="bucketSize">The number of <see cref="T:FluentMvvm.Internals.FixedSizeDictionary`1.Entry" />s to create as the backing array.</param>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.TryGetEntry(System.String,FluentMvvm.Internals.FixedSizeDictionary{`0}.Entry@)">
            <summary>
                Gets the entry associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="entry">
                When this method returns <c>true</c>, contains the entry associated with the specified key, if the
                key is found; otherwise, <c>null</c>. This parameter is passed uninitialized.
            </param>
            <returns><c>true</c>, if <paramref name="key" /> exists in the dictionary; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,`0})">
            <summary>
                Creates a <see cref="T:FluentMvvm.Internals.FixedSizeDictionary`1" /> from an <see cref="T:System.Collections.Generic.IEnumerable`1" /> according to specified
                key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <exception cref="T:System.InvalidOperationException">An entry with the same key already exists.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.CalculateCapacity(System.Int32)">
            <summary>
            Calculates the number of buckets for a collection of size <paramref name="collectionSize"/> so that the load factor does not exceed ln(2).
            </summary>
            <param name="collectionSize">The number of values to add to the dictionary.</param>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.DetermineIndex(System.Int32)">
            <summary>
                Determines the index in the buckets array for the element with hash code <paramref name="hashCode" />.
            </summary>
            <param name="hashCode">The hash code of the element.</param>
            <returns>The index in the buckets array.</returns>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.Add(System.String,`0)">
            <summary>
                Adds the <paramref name="value" /> to the dictionary, if the key <paramref name="key" /> was not already added to
                the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.InvalidOperationException">An entry with the key <paramref name="key" /> already exists.</exception>
        </member>
        <member name="T:FluentMvvm.Internals.FixedSizeDictionary`1.Entry">
            <summary>
                Represents <see cref="T:FluentMvvm.Internals.FixedSizeDictionary`1" /> entry.
            </summary>
        </member>
        <member name="M:FluentMvvm.Internals.FixedSizeDictionary`1.Entry.#ctor(System.String,`0,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:FluentMvvm.Internals.FixedSizeDictionary`1.Entry" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="hashCode">The hash code.</param>
        </member>
        <member name="M:FluentMvvm.Internals.ObjectExtensions.NotNull``1(``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is <c>null</c>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="parameterName"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <returns><paramref name="value"/>, if it is not <c>null</c>.</returns>
        </member>
        <member name="M:FluentMvvm.Internals.ObjectExtensions.NotNullOrEmptyOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws a <see cref="T:System.ArgumentException"/> if <paramref name="value"/> must not be <c>null</c>, empty or consist only of white-space characters.
            </summary>
            <param name="value"></param>
            <param name="parameterName"></param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is <c>null</c>, empty or consists only of white-space characters.</exception>
            <returns><paramref name="value"/>, if it is not <c>null</c>, empty or consists only of whitespace characters.</returns>
        </member>
        <member name="F:FluentMvvm.Internals.RuntimeHelper.AreLiteralsInterned">
            <summary>
            Indicates whether literal strings are interned.
            </summary>
        </member>
        <member name="T:FluentMvvm.Internals.ThrowHelper">
            <summary>
            Using the <see cref="T:FluentMvvm.Internals.ThrowHelper"/> methods allows for callers to be inlined, reduces duplicate CIL code in generic types and ensures consistent exception messages across the library.
            </summary>
        </member>
        <member name="M:FluentMvvm.Internals.ThrowHelper.ThrowKeyNotFoundException(System.String)">
            <summary>
            Throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message stating that <paramref name="key"/> was not present in the dictionary.
            </summary>
            <param name="key">The key that is not present in the dictionary.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="key"/> was not present in the dictionary.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.ThrowHelper.ThrowDuplicateKeyException(System.String)">
            <summary>
            Throws a <see cref="T:System.InvalidOperationException"/> with a message stating that <paramref name="key"/> was already present in the dictionary.
            </summary>
            <param name="key">The key that is already present in the dictionary.</param>
            <exception cref="T:System.InvalidOperationException"><paramref name="key"/> was already present in the dictionary.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.ThrowHelper.ThrowArgumentNullEmptyOrWhiteSpace(System.String)">
            <summary>
            Throws a <see cref="T:System.ArgumentException"/> with a message stating that <paramref name="name"/> must not be <c>null</c>, empty or consist only of white-space characters.
            </summary>
            <param name="name">The name of the parameter that is <c>null</c>, empty or consists only of white-space characters.</param>
            <exception cref="T:System.ArgumentException">the parameter is <c>null</c>, empty or consists only of white-space characters.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.ThrowHelper.ThrowArgumentNullException(System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <param name="name">The name of the parameter that is <c>null</c>.</param>
            <exception cref="T:System.ArgumentNullException">the parameter is <c>null</c>.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.ThrowHelper.ThrowNoBackingFieldsOfType``1(System.Type)">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> stating that no backing fields of type <typeparamref name="T"/> were found on type <paramref name="onType"/>.
            </summary>
            <typeparam name="T">The type of the backing fields.</typeparam>
            <param name="onType">The type to search for the fields on.</param>
            <exception cref="T:System.InvalidOperationException">there are no backing fields of type <typeparamref name="T"/> on the type <paramref name="onType"/>.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.ThrowHelper.ThrowPropertyNotFound(System.String,System.Type,System.Type)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/> stating that no public writable instance property named <paramref name="propertyName"/> was found on type <paramref name="onType"/>.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyType">The type of the property.</param>
            <param name="onType">The type to search for the property on</param>
            <exception cref="T:System.ArgumentException">there is no public writable instance property named <paramref name="propertyName"/> on type <paramref name="onType"/>.</exception>
        </member>
        <member name="M:FluentMvvm.Internals.TypeHelper.GetDefaultValue(System.Reflection.PropertyInfo)">
            <summary>
            Gets the default value for the type of the property, taking into account a <see cref="T:System.ComponentModel.DefaultValueAttribute"/> if it is applied to the property.
            </summary>
            <param name="propertyInfo">The property.</param>
            <returns>The default value for the type of the property.</returns>
        </member>
        <member name="M:FluentMvvm.Internals.TypeHelper.DoesOverloadExist(System.Type)">
            <summary>
            Returns a value indicating whether a specific <c>Get</c> or <c>Set</c> overload for <paramref name="type"/> exists.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c>, if <paramref name="type"/> is a reference type that is not <see cref="T:System.DateTime"/>, <see cref="T:System.Decimal"/> or <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:FluentMvvm.IPropertyGetExpression">
            <summary>
                Provides methods that can be used to get the value of a property.
            </summary>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.Get``1(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <typeparamref name="T" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetBoolean(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Boolean" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetByte(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Byte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetSByte(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.SByte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetChar(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Char" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetDecimal(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Decimal" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetDouble(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Double" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetSingle(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Single" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetInt16(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetUInt16(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetInt32(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetUInt32(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetInt64(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetUInt64(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetDateTime(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.DateTime" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertyGetExpression.GetString(System.String)">
            <summary>
                Gets the value of the specified property.
            </summary>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns>
                The value of the property.
            </returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.String" />.
            </exception>
        </member>
        <member name="T:FluentMvvm.IPropertySetExpression">
            <summary>
                Provides methods that can be used to set a property value.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set``1(``0,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <typeparamref name="T" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Boolean,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Boolean" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Byte,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Byte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.SByte,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.SByte" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Char,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Char" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Decimal,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Decimal" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Double,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Double" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Single,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Single" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Int16,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.UInt16,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt16" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Int32,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.UInt32,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt32" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.Int64,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.Int64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.UInt64,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.UInt64" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.DateTime,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.DateTime" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set(System.String,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                there are no backing fields of type <see cref="T:System.String" />.
            </exception>
        </member>
        <member name="M:FluentMvvm.IPropertySetExpression.Set``1(``0,``0@,System.String)">
            <summary>
                Sets the value of the specified property to <paramref name="value" /> and raises a
                <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event if the new value was different from the old value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <param name="oldValue">A reference to the old value of the property. This can be a field.</param>
            <param name="propertyName">
                The name of the property. Filled in by the compiler automatically, do not specify explicitly.
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
                no public writable instance property named <paramref name="propertyName" /> could be found -or- <paramref name="propertyName" /> is empty or consists only of white-space characters.
            </exception>
        </member>
        <member name="T:FluentMvvm.IWpfCommand">
            <summary>
                The base interface for WPF commands allowing consumers to raise the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />
                event.
            </summary>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="M:FluentMvvm.IWpfCommand.RaiseCanExecuteChanged">
            <summary>
                Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
            </summary>
        </member>
    </members>
</doc>
